{"ast":null,"code":"var request = require('request');\n\nvar parseString = require('xml2js').parseString;\n\nvar api = require('./api');\n\nmodule.exports = function (anime) {\n  anime.add = function (id, episodes, status, callback) {\n    var ret = {\n      success: true,\n      message: ''\n    };\n    anime.retrieveLogin(function (err, json) {\n      add(id, episodes, status, json, callback, ret);\n    });\n  };\n\n  function add(id, episodes, status, auth, callback, ret) {\n    request({\n      'url': api['ADD'] + id + '.xml',\n      'auth': {\n        'user': auth.username,\n        'pass': auth.password,\n        'sendImmediately': true\n      },\n      'headers': {\n        'User-Agent': api['USER_AGENT']\n      },\n      'method': 'POST',\n      'form': constructXML(episodes, status)\n    }, function (error, response, body) {\n      if (!error && Math.floor(response.statusCode / 10) === 20) {\n        callback(ret);\n      } else {\n        ret.success = false;\n        ret.message = response.statusCode;\n        callback(ret);\n      }\n    });\n  }\n\n  function constructXML(episodes, status) {\n    return {\n      data: '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + '<entry>' + '<status>' + status + '</status>' + '<episode>' + (status === 'completed' ? episodes : '0') + '</episode>' + '</entry>'\n    };\n  }\n};","map":{"version":3,"sources":["/home/ramon/Documentos/web/react/blog-data-science/node_modules/anime/list.js"],"names":["request","require","parseString","api","module","exports","anime","add","id","episodes","status","callback","ret","success","message","retrieveLogin","err","json","auth","username","password","constructXML","error","response","body","Math","floor","statusCode","data"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,WAApC;;AAEA,IAAIC,GAAG,GAAGF,OAAO,CAAC,OAAD,CAAjB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAE7BA,EAAAA,KAAK,CAACC,GAAN,GAAY,UAASC,EAAT,EAAaC,QAAb,EAAuBC,MAAvB,EAA+BC,QAA/B,EAAyC;AACjD,QAAIC,GAAG,GAAG;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,OAAO,EAAE;AAFH,KAAV;AAKAR,IAAAA,KAAK,CAACS,aAAN,CAAoB,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACpCV,MAAAA,GAAG,CAACC,EAAD,EAAKC,QAAL,EAAeC,MAAf,EAAuBO,IAAvB,EAA6BN,QAA7B,EAAuCC,GAAvC,CAAH;AACH,KAFD;AAGH,GATD;;AAWA,WAASL,GAAT,CAAaC,EAAb,EAAiBC,QAAjB,EAA2BC,MAA3B,EAAmCQ,IAAnC,EAAyCP,QAAzC,EAAmDC,GAAnD,EAAwD;AACpDZ,IAAAA,OAAO,CAAC;AACJ,aAAOG,GAAG,CAAC,KAAD,CAAH,GAAaK,EAAb,GAAkB,MADrB;AAEJ,cAAQ;AACJ,gBAAQU,IAAI,CAACC,QADT;AAEJ,gBAAQD,IAAI,CAACE,QAFT;AAGJ,2BAAmB;AAHf,OAFJ;AAOJ,iBAAW;AACP,sBAAcjB,GAAG,CAAC,YAAD;AADV,OAPP;AAUJ,gBAAU,MAVN;AAWJ,cAAQkB,YAAY,CAACZ,QAAD,EAAWC,MAAX;AAXhB,KAAD,EAYJ,UAASY,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AAC/B,UAAI,CAACF,KAAD,IAAUG,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,UAAT,GAAsB,EAAjC,MAAyC,EAAvD,EAA2D;AAEvDhB,QAAAA,QAAQ,CAACC,GAAD,CAAR;AAEH,OAJD,MAIO;AACHA,QAAAA,GAAG,CAACC,OAAJ,GAAc,KAAd;AACAD,QAAAA,GAAG,CAACE,OAAJ,GAAcS,QAAQ,CAACI,UAAvB;AAEAhB,QAAAA,QAAQ,CAACC,GAAD,CAAR;AACH;AACJ,KAvBM,CAAP;AAwBH;;AAED,WAASS,YAAT,CAAsBZ,QAAtB,EAAgCC,MAAhC,EAAwC;AACpC,WAAO;AACHkB,MAAAA,IAAI,EAAE,2CACF,SADE,GAEF,UAFE,GAEWlB,MAFX,GAEoB,WAFpB,GAGF,WAHE,IAGcA,MAAM,KAAK,WAAZ,GAA2BD,QAA3B,GAAsC,GAHnD,IAG0D,YAH1D,GAIF;AALD,KAAP;AAOH;AAEJ,CAlDD","sourcesContent":["var request = require('request');\nvar parseString = require('xml2js').parseString;\n\nvar api = require('./api');\n\nmodule.exports = function(anime) {\n\n    anime.add = function(id, episodes, status, callback) {\n        var ret = {\n            success: true,\n            message: ''\n        };\n\n        anime.retrieveLogin(function(err, json) {\n            add(id, episodes, status, json, callback, ret);\n        });\n    };\n\n    function add(id, episodes, status, auth, callback, ret) {\n        request({\n            'url': api['ADD'] + id + '.xml',\n            'auth': {\n                'user': auth.username,\n                'pass': auth.password,\n                'sendImmediately': true\n            },\n            'headers': {\n                'User-Agent': api['USER_AGENT']\n            },\n            'method': 'POST',\n            'form': constructXML(episodes, status)\n        }, function(error, response, body) {\n            if (!error && Math.floor(response.statusCode / 10) === 20) {\n\n                callback(ret);\n\n            } else {\n                ret.success = false;\n                ret.message = response.statusCode;\n\n                callback(ret);\n            }\n        });\n    }\n\n    function constructXML(episodes, status) {\n        return {\n            data: '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' +\n                '<entry>' +\n                '<status>' + status + '</status>' +\n                '<episode>' + ((status === 'completed') ? episodes : '0') + '</episode>' +\n                '</entry>'\n        };\n    }\n\n}"]},"metadata":{},"sourceType":"script"}